diff --git a/README.md b/README.md
index c1ef3b4..ddce64c 100644
--- a/README.md
+++ b/README.md
@@ -53,8 +53,4 @@ Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/bui
 ## Hangman 1.3
 - Polished keyboard for small devices
 - Fixed Bugs
-- Introduced logs
-
-## Hangman 1.31
-- Fixed bug with logs
-
+- Introduced logs
\ No newline at end of file
diff --git a/src/app/logs/LogClient.tsx b/src/app/logs/LogClient.tsx
index 352fc82..02c9786 100644
--- a/src/app/logs/LogClient.tsx
+++ b/src/app/logs/LogClient.tsx
@@ -18,56 +18,57 @@ export default function LogComponent() {
     fetchLogs();
   }, []);
 
+  if (logs.length === 0) {
+    return <div className="bg-[url('/background.jpg')] bg-no-repeat bg-cover text-black w-full min-h-[100dvh] py-2 overflow-hidden">
 
-    if (logs.length === 0) {
-      return <div className="bg-[url('/background.jpg')] bg-no-repeat bg-cover text-black w-full min-h-[100dvh] py-2 overflow-hidden">
+      <Card className="bg-[#f06643b4] items-center w-max mt-2" onClick={async () => { router.push('/') }}>Main Menu</Card>
+      No logs found.</div>;
+  }
 
-        <Card className="bg-[#f06643b4] items-center w-max mt-2" onClick={async () => { router.push('/') }}>Main Menu</Card>
-        No logs found.</div>;
-    }
+  return (
+    <div className="bg-[url('/background.jpg')] bg-no-repeat bg-cover text-black w-full min-h-[100dvh] py-2 overflow-hidden">
+      <span className="items-center flex flex-row">
+        <Card className=" bg-[#f06643b4] items-center w-max mt-2" onClick={async () => { router.push('/') }}>Main Menu</Card>
+        <h2 className=" text-xl font-semibold mb-2">All Log Entries</h2>
+      </span>
+      <table className="min-w-full border border-gray-300">
+        <thead>
+          <tr className="bg-gray-200 text-left">
+            <th className="border px-2 py-1">ID</th>
+            <th className="border px-2 py-1">Game Mode</th>
+            <th className="border px-2 py-1">Game Result</th>
+            <th className="border px-2 py-1">Used Lives</th>
+            <th className="border px-2 py-1">Total Lives</th>
+            <th className="border px-2 py-1">Time Taken</th>
+            <th className="border px-2 py-1">Time Setting</th>
+            <th className="border px-2 py-1">Word</th>
+            <th className="border px-2 py-1">WordArray</th>
+            <th className="border px-2 py-1">Timestamp</th>
+          </tr>
+        </thead>
+        <tbody>
+          {logs.map((log) => (
+            <tr key={log.id}>
+              <td className="border px-2 py-1">{log.id}</td>
+              <td className="border px-2 py-1">{log.gameMode}</td>
+              <td className="border px-2 py-1">{log.gameResult}</td>
+              <td className="border px-2 py-1">{log.totalLives - log.usedLives}</td>
+              <td className="border px-2 py-1">{log.totalLives}</td>
+              <td className="border px-2 py-1">{log.timeTaken}</td>
+              <td className="border px-2 py-1">{log.timeSetting ? 'On Game Start' : 'On Key Press'}</td>
 
-    return (
-      <div className="bg-[url('/background.jpg')] bg-no-repeat bg-cover text-black w-full min-h-[100dvh] py-2 overflow-hidden">
-        <span className="items-center flex flex-row">
-          <Card className=" bg-[#f06643b4] items-center w-max mt-2" onClick={async () => { router.push('/') }}>Main Menu</Card>
-          <h2 className=" text-xl font-semibold mb-2">All Log Entries</h2>
-        </span>
-        <table className="min-w-full border border-gray-300">
-          <thead>
-            <tr className="bg-gray-200 text-left">
-              <th className="border px-2 py-1">ID</th>
-              <th className="border px-2 py-1">Game Mode</th>
-              <th className="border px-2 py-1">Game Result</th>
-              <th className="border px-2 py-1">Remaining Lives</th>
-              <th className="border px-2 py-1">Time Taken</th>
-              <th className="border px-2 py-1">Time Setting</th>
-              <th className="border px-2 py-1">Word</th>
-              <th className="border px-2 py-1">WordArray</th>
-              <th className="border px-2 py-1">Timestamp</th>
+              <td className="border px-2 py-1">{log.word}</td>
+              <td className="border px-2 py-1">{log.WordArray}</td>
+              <td className="border px-2 py-1">
+                {log.timestamp ? new Date(log.timestamp).toLocaleString() : 'N/A'}
+              </td>
             </tr>
-          </thead>
-          <tbody>
-            {logs.map((log) => (
-              <tr key={log.id}>
-                <td className="border px-2 py-1">{log.id}</td>
-                <td className="border px-2 py-1">{log.gameMode}</td>
-                <td className="border px-2 py-1">{log.gameResult}</td>
-                <td className="border px-2 py-1">{log.totalLives - log.usedLives}/{log.totalLives}</td>
-                <td className="border px-2 py-1">{log.timeTaken}</td>
-                <td className="border px-2 py-1">{log.timeSetting ? 'On Game Start' : 'On Key Press'}</td>
+          ))}
+        </tbody>
+      </table>
 
-                <td className="border px-2 py-1">{log.word}</td>
-                <td className="border px-2 py-1">{log.WordArray}</td>
-                <td className="border px-2 py-1">
-                  {log.timestamp ? new Date(log.timestamp).toLocaleString() : 'N/A'}
-                </td>
-              </tr>
-            ))}
-          </tbody>
-        </table>
+      <Card className="bg-[#f06643b4] flex flex-col items-center w-max-content mt-2" onClick={async () => { await resetLogs(); setLogs([]); }}>Reset Logs</Card>
 
-        <Card className="bg-[#f06643b4] flex flex-col items-center w-max-content mt-2" onClick={async () => { await resetLogs(); setLogs([]); }}>Reset Logs</Card>
-
-      </div>
-    );
-}
\ No newline at end of file
+    </div>
+  );
+}
diff --git a/src/app/offline/OfflineClient.tsx b/src/app/offline/OfflineClient.tsx
index 7452950..0287892 100644
--- a/src/app/offline/OfflineClient.tsx
+++ b/src/app/offline/OfflineClient.tsx
@@ -27,7 +27,6 @@ export default function HangmanGame() {
     });
     const [gameOver, setGameOver] = useState(false);
     const [gameResult, setGameResult] = useState<'win' | 'loss' | 'forfeit' | null>(null);
-    const prevGameOver = useRef(false);
 
     useEffect(() => {
         setIsClient(true);
@@ -159,8 +158,7 @@ export default function HangmanGame() {
     }, [isClient, mode, getNewWord, word, gameSettings.totalLives, reset]);
 
     useEffect(() => {
-        if (gameOver !== prevGameOver.current && gameResult) {
-            prevGameOver.current = gameOver;
+        if (gameOver && gameResult) {
             addLog({
                 gameResult,
                 gameMode: mode,
@@ -200,7 +198,7 @@ export default function HangmanGame() {
                 wordCount={wordCount}
             />
 
-            <div className="mb-20 sm:m-0">
+            <div className="mb-12 sm:m-0">
                 {keyboardLayout.map((row, rowIndex) => (
                     <KeyboardRow
                         key={rowIndex}
@@ -212,4 +210,4 @@ export default function HangmanGame() {
             </div>
         </div>
     );
-}
\ No newline at end of file
+}
diff --git a/src/components/Keyboard.tsx b/src/components/Keyboard.tsx
index a31aae4..690be3c 100644
--- a/src/components/Keyboard.tsx
+++ b/src/components/Keyboard.tsx
@@ -36,7 +36,7 @@ export const KeyboardRow = React.memo(({
     pressedKeys: Set<string>;
     onClick: (key: string) => void;
 }) => (
-    <div className='flex gap-1 m-1 mb-6 placeholder:sm:gap-3 md:gap-5 lg:gap-10 justify-center sm:m-10'>
+    <div className='flex gap-1 m-1 mb-6 sm:gap-3 md:gap-5 lg:gap-10 justify-center sm:m-10'>
         {row.map(key => (
             <KeyButton
                 key={key}
@@ -54,4 +54,4 @@ export const keyboardLayout = [
     ['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P'],
     ['A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L'],
     ['Z', 'X', 'C', 'V', 'B', 'N', 'M']
-];
\ No newline at end of file
+];
